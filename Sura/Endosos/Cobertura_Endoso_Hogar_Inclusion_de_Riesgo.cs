///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sura.Endosos
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Cobertura_Endoso_Hogar_Inclusion_de_Riesgo recording.
    /// </summary>
    [TestModule("a282afeb-11cc-48ad-b22b-10d366a317dd", ModuleType.Recording, 1)]
    public partial class Cobertura_Endoso_Hogar_Inclusion_de_Riesgo : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sura.SuraRepository repository.
        /// </summary>
        public static global::Sura.SuraRepository repo = global::Sura.SuraRepository.Instance;

        static Cobertura_Endoso_Hogar_Inclusion_de_Riesgo instance = new Cobertura_Endoso_Hogar_Inclusion_de_Riesgo();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Cobertura_Endoso_Hogar_Inclusion_de_Riesgo()
        {
            SumaAsegurada = "400000";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Cobertura_Endoso_Hogar_Inclusion_de_Riesgo Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("e249a1a2-b157-42ff-9826-60bc615aa12c")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable NvaCalle.
        /// </summary>
        [TestVariable("f029afed-3d74-4880-9719-c7d0e7542a84")]
        public string NvaCalle
        {
            get { return repo.NvaCalle; }
            set { repo.NvaCalle = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable SumaAsegurada.
        /// </summary>
        [TestVariable("25cde838-3eb4-4bed-a045-13a67c2715a7")]
        public string SumaAsegurada
        {
            get { return repo.SumaAsegurada; }
            set { repo.SumaAsegurada = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // --------------------------------Selecciono ultimo elemento cargado
            Report.Log(ReportLevel.Info, "Section", "--------------------------------Selecciono ultimo elemento cargado", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 4s.", new RecordItemIndex(1));
            Delay.Duration(4000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'SURA.Copy_of_L_ViviendaBaja'", repo.SURA.Copy_of_L_ViviendaBajaInfo, new ActionTimeout(20000), new RecordItemIndex(2));
            repo.SURA.Copy_of_L_ViviendaBajaInfo.WaitForExists(20000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.L_ViviendaBaja' at Center.", repo.SURA.L_ViviendaBajaInfo, new RecordItemIndex(3));
            repo.SURA.L_ViviendaBaja.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(4));
            Delay.Duration(1000, false);
            
            // --------------------------------Cargo Cobertura
            Report.Log(ReportLevel.Info, "Section", "--------------------------------Cargo Cobertura", new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Btn_Incendio_Edificio_a_Prorrata' at Center.", repo.SURA.Btn_Incendio_Edificio_a_ProrrataInfo, new RecordItemIndex(6));
            repo.SURA.Btn_Incendio_Edificio_a_Prorrata.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to not exist. Associated repository item: 'SURA.Copy_of_Endoso_SumaAsegurada'", repo.SURA.Copy_of_Endoso_SumaAseguradaInfo, new ActionTimeout(10000), new RecordItemIndex(7));
            repo.SURA.Copy_of_Endoso_SumaAseguradaInfo.WaitForNotExists(10000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Endoso_SumaAsegurada' at 30;18.", repo.SURA.Endoso_SumaAseguradaInfo, new RecordItemIndex(8));
            repo.SURA.Endoso_SumaAsegurada.Click("30;18");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$SumaAsegurada' with focus on 'SURA.Endoso_SumaAsegurada'.", repo.SURA.Endoso_SumaAseguradaInfo, new RecordItemIndex(9));
            repo.SURA.Endoso_SumaAsegurada.PressKeys(SumaAsegurada);
            Delay.Milliseconds(0);
            
            // --------------------------------Cotizo
            Report.Log(ReportLevel.Info, "Section", "--------------------------------Cotizo", new RecordItemIndex(10));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_Cotizar' at 14;6.", repo.SURA.bttn_CotizarInfo, new RecordItemIndex(11));
            repo.SURA.bttn_Cotizar.Click("14;6");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'SURA.txt_Cotizacion'", repo.SURA.txt_CotizacionInfo, new ActionTimeout(20000), new RecordItemIndex(12));
            repo.SURA.txt_CotizacionInfo.WaitForExists(20000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
