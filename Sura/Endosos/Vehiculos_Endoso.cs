///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sura.Endosos
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Vehiculos_Endoso recording.
    /// </summary>
    [TestModule("4bdd58f6-e2bf-48d1-ab0e-558d1d743f03", ModuleType.Recording, 1)]
    public partial class Vehiculos_Endoso : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sura.SuraRepository repository.
        /// </summary>
        public static global::Sura.SuraRepository repo = global::Sura.SuraRepository.Instance;

        static Vehiculos_Endoso instance = new Vehiculos_Endoso();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Vehiculos_Endoso()
        {
            Anio = "2009";
            Marca = "CHEVROLET";
            Modelo = "ASTRA";
            Actividad = "Sin Actividad";
            SumaAsegurada = "400000";
            Patente = "ZZZ999";
            Motor = "ABH134H8812";
            Chasis = "CA52MN31912";
            Producto = "A - Responsabilidad Civil Unicamente";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Vehiculos_Endoso Instance
        {
            get { return instance; }
        }

#region Variables

        string _Actividad;

        /// <summary>
        /// Gets or sets the value of variable Actividad.
        /// </summary>
        [TestVariable("37a6f519-fc76-43d5-9f09-804d9c2c46c0")]
        public string Actividad
        {
            get { return _Actividad; }
            set { _Actividad = value; }
        }

        string _Patente;

        /// <summary>
        /// Gets or sets the value of variable Patente.
        /// </summary>
        [TestVariable("b38bd000-df6d-4922-b7d3-56a32ff320ca")]
        public string Patente
        {
            get { return _Patente; }
            set { _Patente = value; }
        }

        string _Motor;

        /// <summary>
        /// Gets or sets the value of variable Motor.
        /// </summary>
        [TestVariable("6ccc897e-88b9-4c20-a9ef-2e06d12328fa")]
        public string Motor
        {
            get { return _Motor; }
            set { _Motor = value; }
        }

        string _Chasis;

        /// <summary>
        /// Gets or sets the value of variable Chasis.
        /// </summary>
        [TestVariable("b7344c0b-0b2d-4429-8d36-20369e2dcdd9")]
        public string Chasis
        {
            get { return _Chasis; }
            set { _Chasis = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("e249a1a2-b157-42ff-9826-60bc615aa12c")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Anio.
        /// </summary>
        [TestVariable("9a62c177-b5df-420d-99c2-66dbba8e0005")]
        public string Anio
        {
            get { return repo.Anio; }
            set { repo.Anio = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Marca.
        /// </summary>
        [TestVariable("1bb87459-c6c7-4854-af83-361205505e5c")]
        public string Marca
        {
            get { return repo.Marca; }
            set { repo.Marca = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Modelo.
        /// </summary>
        [TestVariable("176e7694-da8d-497d-a451-a58001d6b142")]
        public string Modelo
        {
            get { return repo.Modelo; }
            set { repo.Modelo = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable SumaAsegurada.
        /// </summary>
        [TestVariable("436b1ee3-b609-4c11-a449-2a9bd205b202")]
        public string SumaAsegurada
        {
            get { return repo.SumaAsegurada; }
            set { repo.SumaAsegurada = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Producto.
        /// </summary>
        [TestVariable("948a1db1-e359-469d-9104-47fa8e6fd3e1")]
        public string Producto
        {
            get { return repo.Producto; }
            set { repo.Producto = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_Vehiculos' at Center.", repo.SURA.bttn_VehiculosInfo, new RecordItemIndex(0));
            repo.SURA.bttn_Vehiculos.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 15s to exist. Associated repository item: 'SURA.txt_Vehiculos'", repo.SURA.txt_VehiculosInfo, new ActionTimeout(15000), new RecordItemIndex(1));
            repo.SURA.txt_VehiculosInfo.WaitForExists(15000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
