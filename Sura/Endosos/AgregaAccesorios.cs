///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sura.Endosos
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AgregaAccesorios recording.
    /// </summary>
    [TestModule("c5bb02a6-1f18-408e-a20c-ed4470fca104", ModuleType.Recording, 1)]
    public partial class AgregaAccesorios : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sura.SuraRepository repository.
        /// </summary>
        public static global::Sura.SuraRepository repo = global::Sura.SuraRepository.Instance;

        static AgregaAccesorios instance = new AgregaAccesorios();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AgregaAccesorios()
        {
            NuevoAccesorio = "";
            SumaAccesorio = "5000";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AgregaAccesorios Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("e249a1a2-b157-42ff-9826-60bc615aa12c")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable NuevoAccesorio.
        /// </summary>
        [TestVariable("7a23dea2-d787-4931-b036-d0ae160c049d")]
        public string NuevoAccesorio
        {
            get { return repo.NuevoAccesorio; }
            set { repo.NuevoAccesorio = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable SumaAccesorio.
        /// </summary>
        [TestVariable("bcbda69c-4b65-42ab-a50d-a55b14851612")]
        public string SumaAccesorio
        {
            get { return repo.SumaAccesorio; }
            set { repo.SumaAccesorio = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_Vehiculos' at Center.", repo.SURA.bttn_VehiculosInfo, new RecordItemIndex(0));
            repo.SURA.bttn_Vehiculos.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaMotor.Accesorios.Accesorios' at Center.", repo.SURA.PC.Emision.PolizaMotor.Accesorios.AccesoriosInfo, new RecordItemIndex(1));
            repo.SURA.PC.Emision.PolizaMotor.Accesorios.Accesorios.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'SURA.PC.Txt_Validacion.txt_Vehiculos1'", repo.SURA.PC.Txt_Validacion.txt_Vehiculos1Info, new ActionTimeout(5000), new RecordItemIndex(2));
            repo.SURA.PC.Txt_Validacion.txt_Vehiculos1Info.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaMotor.Accesorios.Select_Accesorio' at Center.", repo.SURA.PC.Emision.PolizaMotor.Accesorios.Select_AccesorioInfo, new RecordItemIndex(3));
            repo.SURA.PC.Emision.PolizaMotor.Accesorios.Select_Accesorio.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaMotor.Accesorios.Copy_of_Select_Accesorio'", repo.SURA.PC.Emision.PolizaMotor.Accesorios.Copy_of_Select_AccesorioInfo, new ActionTimeout(30000), new RecordItemIndex(4));
            repo.SURA.PC.Emision.PolizaMotor.Accesorios.Copy_of_Select_AccesorioInfo.WaitForNotExists(30000);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}' with focus on 'SURA.PC.Emision.PolizaMotor.Accesorios.txt_SumaAseguradaAccesorio'.", repo.SURA.PC.Emision.PolizaMotor.Accesorios.txt_SumaAseguradaAccesorioInfo, new RecordItemIndex(5));
            //repo.SURA.PC.Emision.PolizaMotor.Accesorios.txt_SumaAseguradaAccesorio.PressKeys("{LControlKey down}{Akey}{LControlKey up}");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$SumaAccesorio' with focus on 'SURA.PC.Emision.PolizaMotor.Accesorios.txt_SumaAseguradaAccesorio'.", repo.SURA.PC.Emision.PolizaMotor.Accesorios.txt_SumaAseguradaAccesorioInfo, new RecordItemIndex(6));
            //repo.SURA.PC.Emision.PolizaMotor.Accesorios.txt_SumaAseguradaAccesorio.PressKeys(SumaAccesorio);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaMotor.Accesorios.Copy_of_txt_SumaAseguradaAccesorio'", repo.SURA.PC.Emision.PolizaMotor.Accesorios.Copy_of_txt_SumaAseguradaAccesorioInfo, new ActionTimeout(30000), new RecordItemIndex(7));
            //repo.SURA.PC.Emision.PolizaMotor.Accesorios.Copy_of_txt_SumaAseguradaAccesorioInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_ReCotizar_ModifRiesgo' at Center.", repo.SURA.bttn_ReCotizar_ModifRiesgoInfo, new RecordItemIndex(8));
            repo.SURA.bttn_ReCotizar_ModifRiesgo.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
