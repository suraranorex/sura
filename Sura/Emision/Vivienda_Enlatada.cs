///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sura.Emision
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Vivienda_Enlatada recording.
    /// </summary>
    [TestModule("a93951bd-80cf-41c1-8e67-9011eade6d41", ModuleType.Recording, 1)]
    public partial class Vivienda_Enlatada : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sura.SuraRepository repository.
        /// </summary>
        public static global::Sura.SuraRepository repo = global::Sura.SuraRepository.Instance;

        static Vivienda_Enlatada instance = new Vivienda_Enlatada();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Vivienda_Enlatada()
        {
            Provincia = "Buenos Aires";
            Localidad = "Lomas de zamora";
            Calle = "Pavon";
            TipoVivienda = "Permanente";
            Producto = "L.F. Casa/Dpto PB 1° Piso";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Vivienda_Enlatada Instance
        {
            get { return instance; }
        }

#region Variables

        string _Calle;

        /// <summary>
        /// Gets or sets the value of variable Calle.
        /// </summary>
        [TestVariable("9d790da2-40b6-4878-94d5-10f04b10a8d1")]
        public string Calle
        {
            get { return _Calle; }
            set { _Calle = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("e249a1a2-b157-42ff-9826-60bc615aa12c")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Provincia.
        /// </summary>
        [TestVariable("f73ee919-8612-456f-a313-284304a22795")]
        public string Provincia
        {
            get { return repo.PROVINCIA; }
            set { repo.PROVINCIA = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Localidad.
        /// </summary>
        [TestVariable("5e5f6e2e-6dee-40de-a61d-9a6a1dc05a9e")]
        public string Localidad
        {
            get { return repo.LOCALIDAD; }
            set { repo.LOCALIDAD = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable TipoVivienda.
        /// </summary>
        [TestVariable("ccb50087-6750-400c-9ba2-15079cb88a7c")]
        public string TipoVivienda
        {
            get { return repo.TipoVivienda; }
            set { repo.TipoVivienda = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Producto.
        /// </summary>
        [TestVariable("836c1c3e-d03c-4189-b740-e4b62f5a283f")]
        public string Producto
        {
            get { return repo.Producto; }
            set { repo.Producto = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaHogar.Enlatado.bttn_NuevaUbicacion' at CenterLeft.", repo.SURA.PC.Emision.PolizaHogar.Enlatado.bttn_NuevaUbicacionInfo, new RecordItemIndex(0));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.bttn_NuevaUbicacion.Click(Location.CenterLeft);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaHogar.Enlatado.option_UbicacionNueva' at Center.", repo.SURA.PC.Emision.PolizaHogar.Enlatado.option_UbicacionNuevaInfo, new RecordItemIndex(1));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.option_UbicacionNueva.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'SURA.PC.Emision.PolizaHogar.Enlatado.txt_InformacionDeUbicacion'", repo.SURA.PC.Emision.PolizaHogar.Enlatado.txt_InformacionDeUbicacionInfo, new ActionTimeout(30000), new RecordItemIndex(2));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.txt_InformacionDeUbicacionInfo.WaitForExists(30000);
            
            // ---------------------------
            Report.Log(ReportLevel.Info, "Section", "---------------------------", new RecordItemIndex(3));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Provincia' at Center.", repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_ProvinciaInfo, new RecordItemIndex(4));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Provincia.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Provincia' with focus on 'SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Provincia'.", repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_ProvinciaInfo, new RecordItemIndex(5));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Provincia.PressKeys(Provincia);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Provincia'.", repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_ProvinciaInfo, new RecordItemIndex(6));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Provincia.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaHogar.Enlatado.Copy_of_txtbox_Provincia'", repo.SURA.PC.Emision.PolizaHogar.Enlatado.Copy_of_txtbox_ProvinciaInfo, new ActionTimeout(30000), new RecordItemIndex(7));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.Copy_of_txtbox_ProvinciaInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1.5s.", new RecordItemIndex(8));
            Delay.Duration(1500, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Localidad' at Center.", repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_LocalidadInfo, new RecordItemIndex(9));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Localidad.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Localidad' with focus on 'SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Localidad'.", repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_LocalidadInfo, new RecordItemIndex(10));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Localidad.PressKeys(Localidad);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Localidad'.", repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_LocalidadInfo, new RecordItemIndex(11));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Localidad.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1.5s.", new RecordItemIndex(12));
            Delay.Duration(1500, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaHogar.Enlatado.txt_InformacionDeUbicacion' at Center.", repo.SURA.PC.Emision.PolizaHogar.Enlatado.txt_InformacionDeUbicacionInfo, new RecordItemIndex(13));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.txt_InformacionDeUbicacion.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(14));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaHogar.Enlatado.Copy_of_txtbox_Localidad'", repo.SURA.PC.Emision.PolizaHogar.Enlatado.Copy_of_txtbox_LocalidadInfo, new ActionTimeout(30000), new RecordItemIndex(15));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.Copy_of_txtbox_LocalidadInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Calle' with focus on 'SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Calle'.", repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_CalleInfo, new RecordItemIndex(16));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Calle.PressKeys(Calle);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaHogar.Enlatado.txt_InformacionDeUbicacion' at Center.", repo.SURA.PC.Emision.PolizaHogar.Enlatado.txt_InformacionDeUbicacionInfo, new RecordItemIndex(17));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.txt_InformacionDeUbicacion.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaHogar.Enlatado.Copy_of_txtbox_Calle'", repo.SURA.PC.Emision.PolizaHogar.Enlatado.Copy_of_txtbox_CalleInfo, new ActionTimeout(30000), new RecordItemIndex(18));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.Copy_of_txtbox_CalleInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaHogar.Enlatado.bttnValidarDireccion' at Center.", repo.SURA.PC.Emision.PolizaHogar.Enlatado.bttnValidarDireccionInfo, new RecordItemIndex(19));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.bttnValidarDireccion.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 6s.", new RecordItemIndex(20));
            Delay.Duration(6000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.SURA.Self, false, new RecordItemIndex(21));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaHogar.Enlatado.bttn_Aceptar_UbicacionVivienda' at Center.", repo.SURA.PC.Emision.PolizaHogar.Enlatado.bttn_Aceptar_UbicacionViviendaInfo, new RecordItemIndex(22));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.bttn_Aceptar_UbicacionVivienda.Click();
            Delay.Milliseconds(0);
            
            // ---------------------------
            //Report.Log(ReportLevel.Info, "Section", "---------------------------", new RecordItemIndex(23));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$TipoVivienda' with focus on 'SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_TipoDeVivienda'.", repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_TipoDeViviendaInfo, new RecordItemIndex(24));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_TipoDeVivienda.PressKeys(TipoVivienda);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaHogar.NoEnlatado.txt_Vivienda' at Center.", repo.SURA.PC.Emision.PolizaHogar.NoEnlatado.txt_ViviendaInfo, new RecordItemIndex(25));
            repo.SURA.PC.Emision.PolizaHogar.NoEnlatado.txt_Vivienda.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaHogar.Enlatado.Copy_of_txtbox_TipoDeVivienda'", repo.SURA.PC.Emision.PolizaHogar.Enlatado.Copy_of_txtbox_TipoDeViviendaInfo, new ActionTimeout(30000), new RecordItemIndex(26));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.Copy_of_txtbox_TipoDeViviendaInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Producto' at Center.", repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_ProductoInfo, new RecordItemIndex(27));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Producto.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Producto' with focus on 'SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Producto'.", repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_ProductoInfo, new RecordItemIndex(28));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.txtbox_Producto.PressKeys(Producto);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaHogar.NoEnlatado.txt_Vivienda' at Center.", repo.SURA.PC.Emision.PolizaHogar.NoEnlatado.txt_ViviendaInfo, new RecordItemIndex(29));
            repo.SURA.PC.Emision.PolizaHogar.NoEnlatado.txt_Vivienda.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaHogar.Enlatado.Copy_of_txtbox_Producto'", repo.SURA.PC.Emision.PolizaHogar.Enlatado.Copy_of_txtbox_ProductoInfo, new ActionTimeout(30000), new RecordItemIndex(30));
            repo.SURA.PC.Emision.PolizaHogar.Enlatado.Copy_of_txtbox_ProductoInfo.WaitForNotExists(30000);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.SURA.Self, false, new RecordItemIndex(31));
            
            // ---------------------------
            Report.Log(ReportLevel.Info, "Section", "---------------------------", new RecordItemIndex(32));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'SURA.PC.Emision.Generales.InformacionDePoliza.Botones.bttn_Siguiente' at Center.", repo.SURA.PC.Emision.Generales.InformacionDePoliza.Botones.bttn_SiguienteInfo, new RecordItemIndex(33));
            repo.SURA.PC.Emision.Generales.InformacionDePoliza.Botones.bttn_Siguiente.MoveTo();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.Generales.InformacionDePoliza.Botones.bttn_Siguiente' at 30;5.", repo.SURA.PC.Emision.Generales.InformacionDePoliza.Botones.bttn_SiguienteInfo, new RecordItemIndex(34));
            repo.SURA.PC.Emision.Generales.InformacionDePoliza.Botones.bttn_Siguiente.Click("30;5");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'SURA.PC.Txt_Validacion.txt_Coberturas2'", repo.SURA.PC.Txt_Validacion.txt_Coberturas2Info, new ActionTimeout(20000), new RecordItemIndex(35));
            repo.SURA.PC.Txt_Validacion.txt_Coberturas2Info.WaitForExists(20000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
