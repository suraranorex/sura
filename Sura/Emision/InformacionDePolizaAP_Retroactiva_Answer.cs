///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sura.Emision
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InformacionDePolizaAP_Retroactiva_Answer recording.
    /// </summary>
    [TestModule("086ce056-8f0c-4018-a1a4-2696d749328d", ModuleType.Recording, 1)]
    public partial class InformacionDePolizaAP_Retroactiva_Answer : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sura.SuraRepository repository.
        /// </summary>
        public static global::Sura.SuraRepository repo = global::Sura.SuraRepository.Instance;

        static InformacionDePolizaAP_Retroactiva_Answer instance = new InformacionDePolizaAP_Retroactiva_Answer();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InformacionDePolizaAP_Retroactiva_Answer()
        {
            TipoPlazo = "3 meses";
            FechaInicio = "17/5/2020";
            MetodoDePago = "Cupón";
            Plan = "81 ver. 1";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InformacionDePolizaAP_Retroactiva_Answer Instance
        {
            get { return instance; }
        }

#region Variables

        string _TipoPlazo;

        /// <summary>
        /// Gets or sets the value of variable TipoPlazo.
        /// </summary>
        [TestVariable("e97432b1-8d2d-40ef-8d18-2cc1d25dc693")]
        public string TipoPlazo
        {
            get { return _TipoPlazo; }
            set { _TipoPlazo = value; }
        }

        string _Plan;

        /// <summary>
        /// Gets or sets the value of variable Plan.
        /// </summary>
        [TestVariable("dea9f458-c77f-4ff4-9077-1d1137b83dc8")]
        public string Plan
        {
            get { return _Plan; }
            set { _Plan = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("e249a1a2-b157-42ff-9826-60bc615aa12c")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable FechaInicio.
        /// </summary>
        [TestVariable("7b3d1bc1-9a32-447a-89a7-36403313a972")]
        public string FechaInicio
        {
            get { return repo.FechaInicio; }
            set { repo.FechaInicio = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable MetodoDePago.
        /// </summary>
        [TestVariable("778398d8-cb85-4a77-9dde-cc33699e9dd8")]
        public string MetodoDePago
        {
            get { return repo.MetodoDePago; }
            set { repo.MetodoDePago = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}' with focus on 'SURA.PC.Emision.Generales.InformacionDePoliza.txt_Tipo_Plan'.", repo.SURA.PC.Emision.Generales.InformacionDePoliza.txt_Tipo_PlanInfo, new RecordItemIndex(0));
            repo.SURA.PC.Emision.Generales.InformacionDePoliza.txt_Tipo_Plan.PressKeys("{LControlKey down}{Akey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Plan' with focus on 'SURA.PC.Emision.Generales.InformacionDePoliza.txt_Tipo_Plan'.", repo.SURA.PC.Emision.Generales.InformacionDePoliza.txt_Tipo_PlanInfo, new RecordItemIndex(1));
            repo.SURA.PC.Emision.Generales.InformacionDePoliza.txt_Tipo_Plan.PressKeys(Plan);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Lbl_DetallesDeLaPoliza' at UpperRight.", repo.SURA.Lbl_DetallesDeLaPolizaInfo, new RecordItemIndex(2));
            repo.SURA.Lbl_DetallesDeLaPoliza.Click(Location.UpperRight);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.Generales.InformacionDePoliza.Copy_of_txt_Tipo_Plan'", repo.SURA.PC.Emision.Generales.InformacionDePoliza.Copy_of_txt_Tipo_PlanInfo, new ActionTimeout(30000), new RecordItemIndex(3));
            repo.SURA.PC.Emision.Generales.InformacionDePoliza.Copy_of_txt_Tipo_PlanInfo.WaitForNotExists(30000);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}' with focus on 'SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazo'.", repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazoInfo, new RecordItemIndex(4));
            //repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazo.PressKeys("{LControlKey down}{Akey}{LControlKey up}");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$TipoPlazo' with focus on 'SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazo'.", repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazoInfo, new RecordItemIndex(5));
            //repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazo.PressKeys(TipoPlazo);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Lbl_DetallesDeLaPoliza' at UpperRight.", repo.SURA.Lbl_DetallesDeLaPolizaInfo, new RecordItemIndex(6));
            //repo.SURA.Lbl_DetallesDeLaPoliza.Click(Location.UpperRight);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaMotor.InformacionDePoliza.Copy_of_txt_TipoPlazo'", repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.Copy_of_txt_TipoPlazoInfo, new ActionTimeout(30000), new RecordItemIndex(7));
            //repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.Copy_of_txt_TipoPlazoInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}' with focus on 'SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_Fecha_Inicio'.", repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_Fecha_InicioInfo, new RecordItemIndex(8));
            repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_Fecha_Inicio.PressKeys("{LControlKey down}{Akey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FechaInicio' with focus on 'SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_Fecha_Inicio'.", repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_Fecha_InicioInfo, new RecordItemIndex(9));
            repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_Fecha_Inicio.PressKeys(FechaInicio);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Lbl_DetallesDeLaPoliza' at UpperRight.", repo.SURA.Lbl_DetallesDeLaPolizaInfo, new RecordItemIndex(10));
            repo.SURA.Lbl_DetallesDeLaPoliza.Click(Location.UpperRight);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaMotor.InformacionDePoliza.Copy_of_txt_Fecha_Inicio'", repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.Copy_of_txt_Fecha_InicioInfo, new ActionTimeout(30000), new RecordItemIndex(11));
            repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.Copy_of_txt_Fecha_InicioInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$MetodoDePago' with focus on 'SURA.PC.Emision.Generales.InformacionDePoliza.list_MetodoDePago'.", repo.SURA.PC.Emision.Generales.InformacionDePoliza.list_MetodoDePagoInfo, new RecordItemIndex(12));
            repo.SURA.PC.Emision.Generales.InformacionDePoliza.list_MetodoDePago.PressKeys(MetodoDePago);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Lbl_DetallesDeLaPoliza' at UpperRight.", repo.SURA.Lbl_DetallesDeLaPolizaInfo, new RecordItemIndex(13));
            repo.SURA.Lbl_DetallesDeLaPoliza.Click(Location.UpperRight);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 40s to not exist. Associated repository item: 'SURA.PC.Emision.Generales.InformacionDePoliza.Copy_of_list_MetodoDePago'", repo.SURA.PC.Emision.Generales.InformacionDePoliza.Copy_of_list_MetodoDePagoInfo, new ActionTimeout(40000), new RecordItemIndex(14));
            repo.SURA.PC.Emision.Generales.InformacionDePoliza.Copy_of_list_MetodoDePagoInfo.WaitForNotExists(40000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
