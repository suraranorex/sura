///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sura.Emision
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Personas_Enlatada recording.
    /// </summary>
    [TestModule("7ad5e606-1199-4c47-81b2-86d47f43317d", ModuleType.Recording, 1)]
    public partial class Personas_Enlatada : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sura.SuraRepository repository.
        /// </summary>
        public static global::Sura.SuraRepository repo = global::Sura.SuraRepository.Instance;

        static Personas_Enlatada instance = new Personas_Enlatada();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Personas_Enlatada()
        {
            TipoDocumento = "D.N.I.";
            NumeroDocumento = "37172773";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Personas_Enlatada Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("e249a1a2-b157-42ff-9826-60bc615aa12c")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable TipoDocumento.
        /// </summary>
        [TestVariable("f17dab93-da0f-4001-bdd0-8ed3e646fbaa")]
        public string TipoDocumento
        {
            get { return repo.TipoDocumento; }
            set { repo.TipoDocumento = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable NumeroDocumento.
        /// </summary>
        [TestVariable("6739dced-b815-4a81-abfd-c13123de938a")]
        public string NumeroDocumento
        {
            get { return repo.NumeroDocumento; }
            set { repo.NumeroDocumento = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaAP.Personas.bttn_InformacionAsegurado' at Center.", repo.SURA.PC.Emision.PolizaAP.Personas.bttn_InformacionAseguradoInfo, new RecordItemIndex(0));
            repo.SURA.PC.Emision.PolizaAP.Personas.bttn_InformacionAsegurado.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaAP.Personas.txtbox_TipoDeDocumento' at Center.", repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_TipoDeDocumentoInfo, new RecordItemIndex(1));
            repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_TipoDeDocumento.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'SURA.PC.Emision.PolizaAP.Personas.txtbox_TipoDeDocumento'.", repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_TipoDeDocumentoInfo, new RecordItemIndex(2));
            Keyboard.PrepareFocus(repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_TipoDeDocumento);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}' with focus on 'SURA.PC.Emision.PolizaAP.Personas.txtbox_TipoDeDocumento'.", repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_TipoDeDocumentoInfo, new RecordItemIndex(3));
            repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_TipoDeDocumento.PressKeys("{Back}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$TipoDocumento' with focus on 'SURA.PC.Emision.PolizaAP.Personas.txtbox_TipoDeDocumento'.", repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_TipoDeDocumentoInfo, new RecordItemIndex(4));
            repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_TipoDeDocumento.PressKeys(TipoDocumento);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Txt_Validacion.txt_DetalleAsegurados' at Center.", repo.SURA.PC.Txt_Validacion.txt_DetalleAseguradosInfo, new RecordItemIndex(5));
            repo.SURA.PC.Txt_Validacion.txt_DetalleAsegurados.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_TipoDeDocumento'", repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_TipoDeDocumentoInfo, new ActionTimeout(30000), new RecordItemIndex(6));
            repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_TipoDeDocumentoInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaAP.Personas.txtbox_NumeroDeDocumento' at Center.", repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_NumeroDeDocumentoInfo, new RecordItemIndex(7));
            repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_NumeroDeDocumento.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'SURA.PC.Emision.PolizaAP.Personas.txtbox_NumeroDeDocumento'.", repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_NumeroDeDocumentoInfo, new RecordItemIndex(8));
            Keyboard.PrepareFocus(repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_NumeroDeDocumento);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}' with focus on 'SURA.PC.Emision.PolizaAP.Personas.txtbox_NumeroDeDocumento'.", repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_NumeroDeDocumentoInfo, new RecordItemIndex(9));
            repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_NumeroDeDocumento.PressKeys("{Back}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NumeroDocumento' with focus on 'SURA.PC.Emision.PolizaAP.Personas.txtbox_NumeroDeDocumento'.", repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_NumeroDeDocumentoInfo, new RecordItemIndex(10));
            repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_NumeroDeDocumento.PressKeys(NumeroDocumento);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Txt_Validacion.txt_DetalleAsegurados' at Center.", repo.SURA.PC.Txt_Validacion.txt_DetalleAseguradosInfo, new RecordItemIndex(11));
            repo.SURA.PC.Txt_Validacion.txt_DetalleAsegurados.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_NumeroDeDocumento'", repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_NumeroDeDocumentoInfo, new ActionTimeout(30000), new RecordItemIndex(12));
            repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_NumeroDeDocumentoInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaAP.Personas.bttn_ValidarDocumento' at Center.", repo.SURA.PC.Emision.PolizaAP.Personas.bttn_ValidarDocumentoInfo, new RecordItemIndex(13));
            repo.SURA.PC.Emision.PolizaAP.Personas.bttn_ValidarDocumento.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_NumeroDeDocumento'", repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_NumeroDeDocumentoInfo, new ActionTimeout(30000), new RecordItemIndex(14));
            repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_NumeroDeDocumentoInfo.WaitForNotExists(30000);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.SURA.Self, false, new RecordItemIndex(15));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.Generales.InformacionDePoliza.Botones.bttn_Cotizar' at Center.", repo.SURA.PC.Emision.Generales.InformacionDePoliza.Botones.bttn_CotizarInfo, new RecordItemIndex(16));
            repo.SURA.PC.Emision.Generales.InformacionDePoliza.Botones.bttn_Cotizar.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'SURA.PC.Txt_Validacion.txt_Cotizacion'", repo.SURA.PC.Txt_Validacion.txt_CotizacionInfo, new ActionTimeout(20000), new RecordItemIndex(17));
            repo.SURA.PC.Txt_Validacion.txt_CotizacionInfo.WaitForExists(20000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
