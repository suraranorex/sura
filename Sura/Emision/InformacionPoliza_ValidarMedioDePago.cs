///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sura.Emision
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InformacionPoliza_ValidarMedioDePago recording.
    /// </summary>
    [TestModule("e79295b5-2848-4dcb-a12d-bdbe2ec095f0", ModuleType.Recording, 1)]
    public partial class InformacionPoliza_ValidarMedioDePago : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sura.SuraRepository repository.
        /// </summary>
        public static global::Sura.SuraRepository repo = global::Sura.SuraRepository.Instance;

        static InformacionPoliza_ValidarMedioDePago instance = new InformacionPoliza_ValidarMedioDePago();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InformacionPoliza_ValidarMedioDePago()
        {
            MetodoDePago = "Cupón";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InformacionPoliza_ValidarMedioDePago Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("e249a1a2-b157-42ff-9826-60bc615aa12c")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable MetodoDePago.
        /// </summary>
        [TestVariable("6f4c1f7b-e444-4321-b110-7ead32532bec")]
        public string MetodoDePago
        {
            get { return repo.MetodoDePago; }
            set { repo.MetodoDePago = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // Método de pago
            Report.Log(ReportLevel.Info, "Section", "Método de pago", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.Generales.InformacionDePoliza.list_MetodoDePago' at Center.", repo.SURA.PC.Emision.Generales.InformacionDePoliza.list_MetodoDePagoInfo, new RecordItemIndex(1));
            repo.SURA.PC.Emision.Generales.InformacionDePoliza.list_MetodoDePago.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$MetodoDePago' with focus on 'SURA.PC.Emision.Generales.InformacionDePoliza.list_MetodoDePago'.", repo.SURA.PC.Emision.Generales.InformacionDePoliza.list_MetodoDePagoInfo, new RecordItemIndex(2));
            repo.SURA.PC.Emision.Generales.InformacionDePoliza.list_MetodoDePago.PressKeys(MetodoDePago);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Endosos.Txt_Validacion.txt_InformacionDePoliza' at Center.", repo.SURA.PC.Endosos.Txt_Validacion.txt_InformacionDePolizaInfo, new RecordItemIndex(3));
            repo.SURA.PC.Endosos.Txt_Validacion.txt_InformacionDePoliza.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to not exist. Associated repository item: 'SURA.PC.Emision.Generales.InformacionDePoliza.Copy_of_list_MetodoDePago'", repo.SURA.PC.Emision.Generales.InformacionDePoliza.Copy_of_list_MetodoDePagoInfo, new ActionTimeout(10000), new RecordItemIndex(4));
            repo.SURA.PC.Emision.Generales.InformacionDePoliza.Copy_of_list_MetodoDePagoInfo.WaitForNotExists(10000);
            
            // Tipo de plazo
            Report.Log(ReportLevel.Info, "Section", "Tipo de plazo", new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazo' at Center.", repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazoInfo, new RecordItemIndex(6));
            repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '1 mes' with focus on 'SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazo'.", repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazoInfo, new RecordItemIndex(7));
            repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazo.PressKeys("1 mes");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Endosos.Txt_Validacion.txt_InformacionDePoliza' at Center.", repo.SURA.PC.Endosos.Txt_Validacion.txt_InformacionDePolizaInfo, new RecordItemIndex(8));
            repo.SURA.PC.Endosos.Txt_Validacion.txt_InformacionDePoliza.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaMotor.InformacionDePoliza.Copy_of_txt_TipoPlazo'", repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.Copy_of_txt_TipoPlazoInfo, new ActionTimeout(5000), new RecordItemIndex(9));
            repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.Copy_of_txt_TipoPlazoInfo.WaitForNotExists(5000);
            
            // Validar mensaje
            Report.Log(ReportLevel.Info, "Section", "Validar mensaje", new RecordItemIndex(10));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.Generales.InformacionDePoliza.Botones.bttn_Siguiente' at Center.", repo.SURA.PC.Emision.Generales.InformacionDePoliza.Botones.bttn_SiguienteInfo, new RecordItemIndex(11));
            repo.SURA.PC.Emision.Generales.InformacionDePoliza.Botones.bttn_Siguiente.Click();
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.SURA.Self, false, new RecordItemIndex(12));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SURA.PC.Emision.PolizaMotor.CoberturasAdicionales.txt_MensajeMediosPagoAutomaticos'.", repo.SURA.PC.Emision.PolizaMotor.CoberturasAdicionales.txt_MensajeMediosPagoAutomaticosInfo, new RecordItemIndex(13));
            Validate.Exists(repo.SURA.PC.Emision.PolizaMotor.CoberturasAdicionales.txt_MensajeMediosPagoAutomaticosInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
