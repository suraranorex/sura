///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sura.Emision
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The DebitoBancario recording.
    /// </summary>
    [TestModule("da4f18e4-bc4d-40a1-bb93-bd5557a22c0c", ModuleType.Recording, 1)]
    public partial class DebitoBancario : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sura.SuraRepository repository.
        /// </summary>
        public static global::Sura.SuraRepository repo = global::Sura.SuraRepository.Instance;

        static DebitoBancario instance = new DebitoBancario();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public DebitoBancario()
        {
            ConductoPago = "SNP";
            NumCBU = "2590073820069896530169";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static DebitoBancario Instance
        {
            get { return instance; }
        }

#region Variables

        string _ConductoPago;

        /// <summary>
        /// Gets or sets the value of variable ConductoPago.
        /// </summary>
        [TestVariable("75d02530-51e2-41af-a9a1-c326ff09b999")]
        public string ConductoPago
        {
            get { return _ConductoPago; }
            set { _ConductoPago = value; }
        }

        string _NumCBU;

        /// <summary>
        /// Gets or sets the value of variable NumCBU.
        /// </summary>
        [TestVariable("ef1b9e75-c41d-46f8-b2c6-d6c6d83934f7")]
        public string NumCBU
        {
            get { return _NumCBU; }
            set { _NumCBU = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("e249a1a2-b157-42ff-9826-60bc615aa12c")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Menu.menu_InformacionDelPago' at Center.", repo.SURA.PC.Menu.menu_InformacionDelPagoInfo, new RecordItemIndex(0));
            repo.SURA.PC.Menu.menu_InformacionDelPago.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 45s to exist. Associated repository item: 'SURA.PC.Emision.Generales.InformacionDePago.bttn_Agregar'", repo.SURA.PC.Emision.Generales.InformacionDePago.bttn_AgregarInfo, new ActionTimeout(45000), new RecordItemIndex(1));
            repo.SURA.PC.Emision.Generales.InformacionDePago.bttn_AgregarInfo.WaitForExists(45000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.Generales.InformacionDePago.bttn_Agregar' at Center.", repo.SURA.PC.Emision.Generales.InformacionDePago.bttn_AgregarInfo, new RecordItemIndex(2));
            repo.SURA.PC.Emision.Generales.InformacionDePago.bttn_Agregar.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ConductoPago' with focus on 'SURA.PC.Emision.Generales.InformacionDePago.DebitoBancario.txtbox_ConductoDePago'.", repo.SURA.PC.Emision.Generales.InformacionDePago.DebitoBancario.txtbox_ConductoDePagoInfo, new RecordItemIndex(3));
            repo.SURA.PC.Emision.Generales.InformacionDePago.DebitoBancario.txtbox_ConductoDePago.PressKeys(ConductoPago);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.Generales.InformacionDePago.lbl_NuevoMetodoDePago' at Center.", repo.SURA.PC.Emision.Generales.InformacionDePago.lbl_NuevoMetodoDePagoInfo, new RecordItemIndex(4));
            repo.SURA.PC.Emision.Generales.InformacionDePago.lbl_NuevoMetodoDePago.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 45s to not exist. Associated repository item: 'SURA.PC.Emision.Generales.InformacionDePago.DebitoBancario.Copy_of_txtbox_ConductoDePago'", repo.SURA.PC.Emision.Generales.InformacionDePago.DebitoBancario.Copy_of_txtbox_ConductoDePagoInfo, new ActionTimeout(45000), new RecordItemIndex(5));
            repo.SURA.PC.Emision.Generales.InformacionDePago.DebitoBancario.Copy_of_txtbox_ConductoDePagoInfo.WaitForNotExists(45000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NumCBU' with focus on 'SURA.PC.Emision.Generales.InformacionDePago.DebitoBancario.txtbox_NumCBU'.", repo.SURA.PC.Emision.Generales.InformacionDePago.DebitoBancario.txtbox_NumCBUInfo, new RecordItemIndex(6));
            repo.SURA.PC.Emision.Generales.InformacionDePago.DebitoBancario.txtbox_NumCBU.PressKeys(NumCBU);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.Generales.InformacionDePago.lbl_NuevoMetodoDePago' at Center.", repo.SURA.PC.Emision.Generales.InformacionDePago.lbl_NuevoMetodoDePagoInfo, new RecordItemIndex(7));
            repo.SURA.PC.Emision.Generales.InformacionDePago.lbl_NuevoMetodoDePago.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 45s to not exist. Associated repository item: 'SURA.PC.Emision.Generales.InformacionDePago.DebitoBancario.Copy_of_txtbox_NumCBU'", repo.SURA.PC.Emision.Generales.InformacionDePago.DebitoBancario.Copy_of_txtbox_NumCBUInfo, new ActionTimeout(45000), new RecordItemIndex(8));
            repo.SURA.PC.Emision.Generales.InformacionDePago.DebitoBancario.Copy_of_txtbox_NumCBUInfo.WaitForNotExists(45000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.Generales.InformacionDePago.bttn_InfoContratante' at Center.", repo.SURA.PC.Emision.Generales.InformacionDePago.bttn_InfoContratanteInfo, new RecordItemIndex(9));
            repo.SURA.PC.Emision.Generales.InformacionDePago.bttn_InfoContratante.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(10));
            Delay.Duration(2000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.SURA.Self, false, new RecordItemIndex(11));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.Generales.InformacionDePago.bttn_Actualizar' at Center.", repo.SURA.PC.Emision.Generales.InformacionDePago.bttn_ActualizarInfo, new RecordItemIndex(12));
            repo.SURA.PC.Emision.Generales.InformacionDePago.bttn_Actualizar.Click();
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Wait", "(Optional Action)\r\nWaiting 10s to exist. Associated repository item: 'SURA_ContinueOnFail.Copy_of_lbl_TCExistente'", repo.SURA_ContinueOnFail.Copy_of_lbl_TCExistenteInfo, new ActionTimeout(10000), new RecordItemIndex(13));
                repo.SURA_ContinueOnFail.Copy_of_lbl_TCExistenteInfo.WaitForExists(10000);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(13)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'SURA_ContinueOnFail.Copy_of_btn_COF_CancelarTC' at Center.", repo.SURA_ContinueOnFail.Copy_of_btn_COF_CancelarTCInfo, new RecordItemIndex(14));
                repo.SURA_ContinueOnFail.Copy_of_btn_COF_CancelarTC.Click();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(14)); }
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'SURA.PC.Endosos2.ModifCoberturas.title_InformacionDelPago'", repo.SURA.PC.Endosos2.ModifCoberturas.title_InformacionDelPagoInfo, new ActionTimeout(5000), new RecordItemIndex(15));
            repo.SURA.PC.Endosos2.ModifCoberturas.title_InformacionDelPagoInfo.WaitForExists(5000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
