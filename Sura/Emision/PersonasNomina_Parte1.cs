///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sura.Emision
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The PersonasNomina_Parte1 recording.
    /// </summary>
    [TestModule("48b14543-4cbb-41dc-9f23-e5b628069856", ModuleType.Recording, 1)]
    public partial class PersonasNomina_Parte1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sura.SuraRepository repository.
        /// </summary>
        public static global::Sura.SuraRepository repo = global::Sura.SuraRepository.Instance;

        static PersonasNomina_Parte1 instance = new PersonasNomina_Parte1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public PersonasNomina_Parte1()
        {
            Actividad = "PERSONAL ADMINISTRATIVO";
            CantidadVigente = "10";
            SumaAsegurada = "100000";
            TipoDocumento = "D.N.I.";
            NumeroDocumento = "37191997";
            NombreArchivo = "";
            NroTransaccion = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static PersonasNomina_Parte1 Instance
        {
            get { return instance; }
        }

#region Variables

        string _Actividad;

        /// <summary>
        /// Gets or sets the value of variable Actividad.
        /// </summary>
        [TestVariable("3deee6ea-a92f-41fe-97ed-f66710ecc433")]
        public string Actividad
        {
            get { return _Actividad; }
            set { _Actividad = value; }
        }

        string _CantidadVigente;

        /// <summary>
        /// Gets or sets the value of variable CantidadVigente.
        /// </summary>
        [TestVariable("f931b32a-d93f-433f-8942-901e90f4dba9")]
        public string CantidadVigente
        {
            get { return _CantidadVigente; }
            set { _CantidadVigente = value; }
        }

        string _NombreArchivo;

        /// <summary>
        /// Gets or sets the value of variable NombreArchivo.
        /// </summary>
        [TestVariable("086690e8-b681-42fc-9f14-7d37bc3d224e")]
        public string NombreArchivo
        {
            get { return _NombreArchivo; }
            set { _NombreArchivo = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("e249a1a2-b157-42ff-9826-60bc615aa12c")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable SumaAsegurada.
        /// </summary>
        [TestVariable("0b4d8953-23a4-499e-bfb9-e17bbf8e4d30")]
        public string SumaAsegurada
        {
            get { return repo.SumaAsegurada; }
            set { repo.SumaAsegurada = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable TipoDocumento.
        /// </summary>
        [TestVariable("fc7bb162-22e8-4e2f-a089-8ba78fc67f95")]
        public string TipoDocumento
        {
            get { return repo.TipoDocumento; }
            set { repo.TipoDocumento = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable NumeroDocumento.
        /// </summary>
        [TestVariable("b5f286a1-7588-4dc8-8bf5-c32026fee899")]
        public string NumeroDocumento
        {
            get { return repo.NumeroDocumento; }
            set { repo.NumeroDocumento = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable NroTransaccion.
        /// </summary>
        [TestVariable("b1b2132a-fffb-4287-bfae-9a361eb2ad00")]
        public string NroTransaccion
        {
            get { return repo.NroTransaccion; }
            set { repo.NroTransaccion = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Actividad' with focus on 'SURA.PC.Emision.PolizaAP.Personas.txtbox_Actividad'.", repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_ActividadInfo, new RecordItemIndex(0));
            repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_Actividad.PressKeys(Actividad);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaAP.Personas.Pantalla' at Center.", repo.SURA.PC.Emision.PolizaAP.Personas.PantallaInfo, new RecordItemIndex(1));
            repo.SURA.PC.Emision.PolizaAP.Personas.Pantalla.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_Actividad'", repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_ActividadInfo, new ActionTimeout(30000), new RecordItemIndex(2));
            repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_ActividadInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$CantidadVigente' with focus on 'SURA.PC.Emision.PolizaAP.Personas.txtbox_CantidadVigente'.", repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_CantidadVigenteInfo, new RecordItemIndex(3));
            repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_CantidadVigente.PressKeys(CantidadVigente);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaAP.Personas.Pantalla' at Center.", repo.SURA.PC.Emision.PolizaAP.Personas.PantallaInfo, new RecordItemIndex(4));
            repo.SURA.PC.Emision.PolizaAP.Personas.Pantalla.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_CantidadVigente'", repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_CantidadVigenteInfo, new ActionTimeout(30000), new RecordItemIndex(5));
            repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_CantidadVigenteInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$SumaAsegurada' with focus on 'SURA.PC.Emision.PolizaAP.Personas.txtbox_SumaAsegurada'.", repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_SumaAseguradaInfo, new RecordItemIndex(6));
            repo.SURA.PC.Emision.PolizaAP.Personas.txtbox_SumaAsegurada.PressKeys(SumaAsegurada);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaAP.Personas.Pantalla' at Center.", repo.SURA.PC.Emision.PolizaAP.Personas.PantallaInfo, new RecordItemIndex(7));
            repo.SURA.PC.Emision.PolizaAP.Personas.Pantalla.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_SumaAsegurada'", repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_SumaAseguradaInfo, new ActionTimeout(30000), new RecordItemIndex(8));
            repo.SURA.PC.Emision.PolizaAP.Personas.Copy_of_txtbox_SumaAseguradaInfo.WaitForNotExists(30000);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.SURA.Self, false, new RecordItemIndex(9));
            
            // -------Información Asegurado
            Report.Log(ReportLevel.Info, "Section", "-------Información Asegurado", new RecordItemIndex(10));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_InformacionAsegurado' at Center.", repo.SURA.bttn_InformacionAseguradoInfo, new RecordItemIndex(11));
            repo.SURA.bttn_InformacionAsegurado.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_AgregarPersona' at Center.", repo.SURA.bttn_AgregarPersonaInfo, new RecordItemIndex(12));
            repo.SURA.bttn_AgregarPersona.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$TipoDocumento' with focus on 'SURA.txtbox_TipoDeDocumento'.", repo.SURA.txtbox_TipoDeDocumentoInfo, new RecordItemIndex(13));
            repo.SURA.txtbox_TipoDeDocumento.PressKeys(TipoDocumento);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaAP.Personas.Pantalla' at Center.", repo.SURA.PC.Emision.PolizaAP.Personas.PantallaInfo, new RecordItemIndex(14));
            repo.SURA.PC.Emision.PolizaAP.Personas.Pantalla.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.Copy_of_txtbox_TipoDeDocumento'", repo.SURA.Copy_of_txtbox_TipoDeDocumentoInfo, new ActionTimeout(30000), new RecordItemIndex(15));
            repo.SURA.Copy_of_txtbox_TipoDeDocumentoInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NumeroDocumento' with focus on 'SURA.txtbox_NumeroDeDocumento'.", repo.SURA.txtbox_NumeroDeDocumentoInfo, new RecordItemIndex(16));
            repo.SURA.txtbox_NumeroDeDocumento.PressKeys(NumeroDocumento);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.PC.Emision.PolizaAP.Personas.Pantalla' at Center.", repo.SURA.PC.Emision.PolizaAP.Personas.PantallaInfo, new RecordItemIndex(17));
            repo.SURA.PC.Emision.PolizaAP.Personas.Pantalla.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.Copy_of_txtbox_NumeroDeDocumento'", repo.SURA.Copy_of_txtbox_NumeroDeDocumentoInfo, new ActionTimeout(30000), new RecordItemIndex(18));
            repo.SURA.Copy_of_txtbox_NumeroDeDocumentoInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_ValidarDocumento' at Center.", repo.SURA.bttn_ValidarDocumentoInfo, new RecordItemIndex(19));
            repo.SURA.bttn_ValidarDocumento.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.Copy_of_txtbox_NumeroDeDocumento'", repo.SURA.Copy_of_txtbox_NumeroDeDocumentoInfo, new ActionTimeout(30000), new RecordItemIndex(20));
            repo.SURA.Copy_of_txtbox_NumeroDeDocumentoInfo.WaitForNotExists(30000);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.SURA.Self, false, new RecordItemIndex(21));
            
            // --------------------------Exportar Archivo
            Report.Log(ReportLevel.Info, "Section", "--------------------------Exportar Archivo", new RecordItemIndex(22));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_Exportar' at 23;9.", repo.SURA.bttn_ExportarInfo, new RecordItemIndex(23));
            repo.SURA.bttn_Exportar.Click("23;9");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.txtbox_Exportar' at 12;7.", repo.SURA.txtbox_ExportarInfo, new RecordItemIndex(24));
            repo.SURA.txtbox_Exportar.Click("12;7");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'SURA.txtbox_Exportar'.", repo.SURA.txtbox_ExportarInfo, new RecordItemIndex(25));
            Keyboard.PrepareFocus(repo.SURA.txtbox_Exportar);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Personas Aseguradas' with focus on 'SURA.txtbox_Exportar'.", repo.SURA.txtbox_ExportarInfo, new RecordItemIndex(26));
            repo.SURA.txtbox_Exportar.PressKeys("Personas Aseguradas");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'SURA.txtbox_Exportar'.", repo.SURA.txtbox_ExportarInfo, new RecordItemIndex(27));
            repo.SURA.txtbox_Exportar.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.Copy_of_txtbox_Exportar'", repo.SURA.Copy_of_txtbox_ExportarInfo, new ActionTimeout(30000), new RecordItemIndex(28));
            repo.SURA.Copy_of_txtbox_ExportarInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_ExportarAHojaDeCalculo' at Center.", repo.SURA.bttn_ExportarAHojaDeCalculoInfo, new RecordItemIndex(29));
            repo.SURA.bttn_ExportarAHojaDeCalculo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'SURA.bttn_DescargarHojaDeCalculo'", repo.SURA.bttn_DescargarHojaDeCalculoInfo, new ActionTimeout(30000), new RecordItemIndex(30));
            repo.SURA.bttn_DescargarHojaDeCalculoInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_DescargarHojaDeCalculo' at Center.", repo.SURA.bttn_DescargarHojaDeCalculoInfo, new RecordItemIndex(31));
            repo.SURA.bttn_DescargarHojaDeCalculo.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'FormDownload.btn_SolicitudDePoliza'", repo.FormDownload.btn_SolicitudDePolizaInfo, new ActionTimeout(30000), new RecordItemIndex(32));
            repo.FormDownload.btn_SolicitudDePolizaInfo.WaitForExists(30000);
            
            fileCheck();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'FormDownload.btn_SolicitudDePoliza' and assigning its value to variable 'NombreArchivo'.", repo.FormDownload.btn_SolicitudDePolizaInfo, new RecordItemIndex(34));
            NombreArchivo = repo.FormDownload.btn_SolicitudDePoliza.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            
            // El nombre del archivo es:
            Report.Log(ReportLevel.Info, "User", NombreArchivo, new RecordItemIndex(35));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'SURA.txt_SolicitudPoliza' and assigning the part of its value captured by '[0-9]+' to variable 'NroTransaccion'.", repo.SURA.txt_SolicitudPolizaInfo, new RecordItemIndex(36));
            NroTransaccion = repo.SURA.txt_SolicitudPoliza.Element.GetAttributeValueText("InnerText", new Regex("[0-9]+"));
            Delay.Milliseconds(0);
            
            // El número de solicitud es:
            Report.Log(ReportLevel.Info, "User", NroTransaccion, new RecordItemIndex(37));
            
            // Manejo del excel
            Report.Log(ReportLevel.Info, "Section", "Manejo del excel", new RecordItemIndex(38));
            
            manejarArchivo();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.bttn_VolverAPersonas' at Center.", repo.SURA.bttn_VolverAPersonasInfo, new RecordItemIndex(40));
            repo.SURA.bttn_VolverAPersonas.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'SURA.PC.Txt_Validacion.txt_Personas'", repo.SURA.PC.Txt_Validacion.txt_PersonasInfo, new ActionTimeout(20000), new RecordItemIndex(41));
            repo.SURA.PC.Txt_Validacion.txt_PersonasInfo.WaitForExists(20000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
