///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Sura.Emision
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InformacionDePolizaAP_Retroactiva recording.
    /// </summary>
    [TestModule("d3e4a549-43de-45da-b436-beca3e3be3a5", ModuleType.Recording, 1)]
    public partial class InformacionDePolizaAP_Retroactiva : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Sura.SuraRepository repository.
        /// </summary>
        public static global::Sura.SuraRepository repo = global::Sura.SuraRepository.Instance;

        static InformacionDePolizaAP_Retroactiva instance = new InformacionDePolizaAP_Retroactiva();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InformacionDePolizaAP_Retroactiva()
        {
            MetodoDePago = "Cupón";
            FechaInicio = "17/5/2020";
            TipoPlazo = "3 meses";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InformacionDePolizaAP_Retroactiva Instance
        {
            get { return instance; }
        }

#region Variables

        string _TipoPlazo;

        /// <summary>
        /// Gets or sets the value of variable TipoPlazo.
        /// </summary>
        [TestVariable("66b954f8-0075-4ca0-866d-f019313e8cf6")]
        public string TipoPlazo
        {
            get { return _TipoPlazo; }
            set { _TipoPlazo = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Ambiente.
        /// </summary>
        [TestVariable("e249a1a2-b157-42ff-9826-60bc615aa12c")]
        public string Ambiente
        {
            get { return repo.Ambiente; }
            set { repo.Ambiente = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable MetodoDePago.
        /// </summary>
        [TestVariable("c048f5ac-ccf9-4d21-ada8-1250f86e935b")]
        public string MetodoDePago
        {
            get { return repo.MetodoDePago; }
            set { repo.MetodoDePago = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable FechaInicio.
        /// </summary>
        [TestVariable("a8d3f3f9-d502-4a51-ab95-a47a4362a54e")]
        public string FechaInicio
        {
            get { return repo.FechaInicio; }
            set { repo.FechaInicio = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}' with focus on 'SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazo'.", repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazoInfo, new RecordItemIndex(0));
            repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazo.PressKeys("{LControlKey down}{Akey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$TipoPlazo' with focus on 'SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazo'.", repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazoInfo, new RecordItemIndex(1));
            repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_TipoPlazo.PressKeys(TipoPlazo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Lbl_DetallesDeLaPoliza' at UpperRight.", repo.SURA.Lbl_DetallesDeLaPolizaInfo, new RecordItemIndex(2));
            repo.SURA.Lbl_DetallesDeLaPoliza.Click(Location.UpperRight);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaMotor.InformacionDePoliza.Copy_of_txt_TipoPlazo'", repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.Copy_of_txt_TipoPlazoInfo, new ActionTimeout(30000), new RecordItemIndex(3));
            repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.Copy_of_txt_TipoPlazoInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}' with focus on 'SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_Fecha_Inicio'.", repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_Fecha_InicioInfo, new RecordItemIndex(4));
            repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_Fecha_Inicio.PressKeys("{LControlKey down}{Akey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FechaInicio' with focus on 'SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_Fecha_Inicio'.", repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_Fecha_InicioInfo, new RecordItemIndex(5));
            repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.txt_Fecha_Inicio.PressKeys(FechaInicio);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Lbl_DetallesDeLaPoliza' at UpperRight.", repo.SURA.Lbl_DetallesDeLaPolizaInfo, new RecordItemIndex(6));
            repo.SURA.Lbl_DetallesDeLaPoliza.Click(Location.UpperRight);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SURA.PC.Emision.PolizaMotor.InformacionDePoliza.Copy_of_txt_Fecha_Inicio'", repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.Copy_of_txt_Fecha_InicioInfo, new ActionTimeout(30000), new RecordItemIndex(7));
            repo.SURA.PC.Emision.PolizaMotor.InformacionDePoliza.Copy_of_txt_Fecha_InicioInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$MetodoDePago' with focus on 'SURA.PC.Emision.Generales.InformacionDePoliza.list_MetodoDePago'.", repo.SURA.PC.Emision.Generales.InformacionDePoliza.list_MetodoDePagoInfo, new RecordItemIndex(8));
            repo.SURA.PC.Emision.Generales.InformacionDePoliza.list_MetodoDePago.PressKeys(MetodoDePago);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SURA.Lbl_DetallesDeLaPoliza' at UpperRight.", repo.SURA.Lbl_DetallesDeLaPolizaInfo, new RecordItemIndex(9));
            repo.SURA.Lbl_DetallesDeLaPoliza.Click(Location.UpperRight);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 40s to not exist. Associated repository item: 'SURA.PC.Emision.Generales.InformacionDePoliza.Copy_of_list_MetodoDePago'", repo.SURA.PC.Emision.Generales.InformacionDePoliza.Copy_of_list_MetodoDePagoInfo, new ActionTimeout(40000), new RecordItemIndex(10));
            repo.SURA.PC.Emision.Generales.InformacionDePoliza.Copy_of_list_MetodoDePagoInfo.WaitForNotExists(40000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
